syntax = "proto3";

package docker.swarmkit.v1;

import "specs.proto";
import "objects.proto";
import "plugin/plugin.proto";

// Secrets defines the RPC methods for controlling secrets in a cluster.
service Secrets {
	rpc GetSecret(GetSecretRequest) returns (GetSecretResponse) {
		option (docker.protobuf.plugin.tls_authorization) = { roles: "swarm-manager" };
	}
	rpc ListSecrets(ListSecretsRequest) returns (ListSecretsResponse) {
		option (docker.protobuf.plugin.tls_authorization) = { roles: "swarm-manager" };
	}
	rpc CreateSecret(CreateSecretRequest) returns (CreateSecretResponse) {
		option (docker.protobuf.plugin.tls_authorization) = { roles: "swarm-manager" };
	}
	rpc UpdateSecret(UpdateSecretRequest) returns (UpdateSecretResponse) {
		option (docker.protobuf.plugin.tls_authorization) = { roles: "swarm-manager" };
	}
	rpc RemoveSecret(RemoveSecretRequest) returns (RemoveSecretResponse) {
		option (docker.protobuf.plugin.tls_authorization) = { roles: "swarm-manager" };
	}
}

message GetSecretRequest {
	// Name is name of the secret to get info for.
	string name = 1;
}

message GetSecretResponse {
	// Secret is the secret corresponding to that ID, but each version in `secret.spec.data` should have its `.data` field be nil
	Secret secret = 1;
}

message ListSecretsRequest {
	message Filters {
		repeated string names = 1;
		repeated string name_prefixes = 2;
	}

	Filters filters = 1;
}

message ListSecretsResponse {
	// Each Secret is the secret corresponding to that ID, but each version in `secret.spec.data` should have its `.data` field be nil
	repeated Secret secrets = 1;
}

// Note CreateSecretRequest does not contain a SecretSpec, since that can contain multiple SecretData objects, which have digests
// which should be generated by the
message CreateSecretRequest {
	SecretSpec spec = 1;
}

message CreateSecretResponse {
	Secret secret = 1;
}

message UpdateSecretRequest {
	SecretSpec spec = 1;
}

message UpdateSecretResponse {
	Secret secret = 1;
}

message RemoveSecretRequest {
	// Name is name of the secret to remove.
	string name = 1;
	// Version is the version to remove
	string version = 2;
}

message RemoveSecretResponse {}
